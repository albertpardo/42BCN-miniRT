# Executable Name
NAME = miniRT_parsing_1

# Makefile path and name
MAKEFILE = test_makefiles/MakefileParsing1

# Compiler and FLAGS
CC = cc
CFLAGS = -Wall -Wextra -Werror -g3 #-fsanitize=address
DPFLAGS = -MMD -MP

# Paths
LIBFT_DIR = lib/libft/
SRCS_DIR = src/
OBJS_DIR = .objs/
DEP_DIR = .dep/

# Include Paths
INCLUDE := -I include/ -I $(LIBFT_DIR)

#Libft flags
LIBFTFLAGS = -L $(LIBFT_DIR) -lft

#Libft.a
LIBFT := $(LIBFT_DIR)libft.a

# Source files
SRC_FILES = tests/minirt_parsing1.c \
	parsing/cleanstringspaces.c \
	parsing/exiterror.c \
	parsing/exitifcheckfails.c \
	parsing/exitifnotvalidfiletype.c \
	parsing/freearrstr.c \
	parsing/ft_isspace.c 

HEADER_FILES = include/minirt.h 

# Objet files
OBJ_FILES := $(SRC_FILES:.c=.o)

# Dependency files
DEPS_FILES := $(SRC_FILES:.o=.d)

# Rutas completas de las bibliotecas
OBJS := $(addprefix $(OBJS_DIR), $(OBJ_FILES))
DEPS := $(addprefix $(DEP_DIR), $(DEPS_FILES))

# Delete folders and files
RM = rm -rf

# Colors
YELLOW = \033[1;33m
GREEN = \033[1;32m
CYAN = \033[1;36m
RESET = \033[0m

# Default rule
all: compilelibs
	@$(MAKE) -f $(MAKEFILE) $(NAME) --no-print-directory

# Libs compile rule
compilelibs:
	@echo "$(CYAN)▉▉▉▉▉▉▶ START: Compiling external libs ...$(RESET)"
	@echo "$(YELLOW)▶ Compiling Libft...$(RESET)"
	@$(MAKE) -C $(LIBFT_DIR) --no-print-directory
	@echo "$(CYAN)▉▉▉▉▉▉▶ END: Extenal libs compiled ...$(RESET)"
	@echo

# Executable Rule
$(NAME): $(OBJS_DIR) $(DEP_DIR) $(OBJS) 
	@echo "$(GREEN)▉▉▉▉▉▉▉▉▉▉ Compiling : $(NAME) ▉▉▉▉▉▉▉▉▉▉ $(RESET)"
	$(CC) $(CFLAGS) $(OBJS) $(LIBFTFLAGS) -o $@
	@echo "$(GREEN)▉▉▉▉▉▉▉▉▉▉ $(NAME) successfully compiled! ▉▉▉▉▉▉▉▉▉▉ $(RESET)"
	@echo

# Objects folder rule
$(OBJS_DIR):
	@mkdir -p $(OBJS_DIR)

# Dependencies folder rule
$(DEP_DIR):
	@mkdir -p $(DEP_DIR)

# Source files to Object files rule (Dependency files are generated)
$(OBJS_DIR)%.o: $(SRCS_DIR)%.c $(MAKEFILE) $(LIBFT) $(HEADER_FILES) | $(OBJS_DIR) $(DEP_DIR)
	@mkdir -p $(dir $@)
	@echo "▶ Compiling... $<"
	$(CC) $(CFLAGS) $(DPFLAGS) -c $< -o $@ $(INCLUDE)
	@mv $(patsubst %.o,%.d,$@) $(DEP_DIR)/$(notdir $(@:.o=.d))
	@echo

# Delete objects and dependecies folders, and 'fclean' libreries
clean:
	@echo "$(YELLOW)▶ Cleaning object files and dependencies...$(RESET)"
	$(RM) $(OBJS_DIR) $(DEP_DIR)
	@echo "$(YELLOW)▶ Cleaning libft$(RESET)"
	make -C lib/libft/ fclean


# Delete executable, objects and dependecies folders
fclean: clean
	@echo "$(YELLOW)▶ Cleaning executable...$(RESET)"
	$(RM) $(NAME)

# Regla para reconstruir todo
re: fclean all

-include $(DEPS)

.PHONY: all clean fclean re compilelibs
